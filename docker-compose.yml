version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: medical_records_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: medical_records
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - medical_records_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: medical_records_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medical_records_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medical_records_backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/medical_records?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-change-this
      - JWT_SECRET_KEY=your-jwt-secret-key-change-this
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - medical_records_network

  # Frontend Web Server
  frontend:
    image: nginx:alpine
    container_name: medical_records_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - medical_records_network

volumes:
  mongodb_data:
  redis_data:

networks:
  medical_records_network:
    driver: bridge